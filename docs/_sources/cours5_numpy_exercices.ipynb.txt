{"cells": [{"cell_type": "markdown", "id": "738f7de0", "metadata": {}, "source": ["# Utilisation de numpy\n", "\n", "## Calcul Monte-Carlo de la surface d'un disque\n", "\n", "On rappelle que la fonction np.random.rand permet de cr\u00e9er une distribution uniforme de points entre 0 et 1.\n", "\n", "1. Cr\u00e9er des tableaux X et Y de variables uniform\u00e9ments r\u00e9parties entre -1 et 1\n", "2. Evaluer la probabilit\u00e9 que le point de coordonn\u00e9es (x, y) soit dans le cercle unit\u00e9 ?\n", "3. En d\u00e9duire une estimation ed $\\pi$\n", "4. De la m\u00eame fa\u00e7on, \u00e9valuer le volume d'une sph\u00e8re en dimension 13"]}, {"cell_type": "markdown", "id": "67d2282f", "metadata": {}, "source": ["## Calcul de la moyenne \n", "\n", "Un tableau numpy contient les notes d'une classe. Chaque ligne correspond \u00e0 un \u00e9l\u00e8ve et chaque colone \u00e0 un examen. "]}, {"cell_type": "code", "execution_count": 11, "id": "2558b2be", "metadata": {"tags": ["keep"]}, "outputs": [], "source": ["import numpy as np\n", "\n", "N_eleves = 35\n", "N_examens = 3\n", "\n", "notes = np.random.rand(N_eleves, N_examens)*20"]}, {"cell_type": "markdown", "id": "084010e3", "metadata": {}, "source": ["1. Calculer la moyenne de chaque \u00e9l\u00e8ve. Calculer la moyenne pour chaque examen. \n", "2. Calculer la moyenne de chaque \u00e9l\u00e8ve, sachant que les coeficients pour les 3 examens sont de 1, 3 et 2. "]}], "metadata": {"celltoolbar": "Tags", "kernelspec": {"display_name": "Python 3", "language": "python", "name": "python3"}, "language_info": {"codemirror_mode": {"name": "ipython", "version": 3}, "file_extension": ".py", "mimetype": "text/x-python", "name": "python", "nbconvert_exporter": "python", "pygments_lexer": "ipython3", "version": "3.8.8"}, "varInspector": {"cols": {"lenName": 16, "lenType": 16, "lenVar": 40}, "kernels_config": {"python": {"delete_cmd_postfix": "", "delete_cmd_prefix": "del ", "library": "var_list.py", "varRefreshCmd": "print(var_dic_list())"}, "r": {"delete_cmd_postfix": ") ", "delete_cmd_prefix": "rm(", "library": "var_list.r", "varRefreshCmd": "cat(var_dic_list()) "}}, "types_to_exclude": ["module", "function", "builtin_function_or_method", "instance", "_Feature"], "window_display": false}}, "nbformat": 4, "nbformat_minor": 5}